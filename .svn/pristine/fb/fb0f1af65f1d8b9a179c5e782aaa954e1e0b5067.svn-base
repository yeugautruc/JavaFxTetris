package de.proglabor.aufgabe1;

import java.util.ArrayList;
import java.util.List;

public abstract class IStone {
	// variables
	private List<Point2D> elements;
	private int width;
	private int key;
	private Point2D center;

	public IStone(Point2D p1, Point2D p2, Point2D p3, Point2D p4, int width, int key) {
		elements = new ArrayList<Point2D>();
		elements.add(p1);
		elements.add(p2);
		elements.add(p3);
		elements.add(p4);
		this.width = width;
//		this.key = key;
		setStone();
	}

	public boolean hasElement(Point2D element) {
		return elements.contains(element);
	}

	public void setStone() {
		for (Point2D point2d : elements) {
			point2d.setX((int) (point2d.getX() + 0.5 * (Tetris.XSIZE - getWidth())));
		}
	}

	public void moveX(int x) {
		for (Point2D point2d : elements) {
			point2d.setX(point2d.getX() + x);
		}
	}

	public void moveY(int y) {
		for (Point2D point2d : elements) {
			point2d.setY(point2d.getY() + y);
		}
	}
	public void rotate() {
		int centerX = center.getX();
		int  centerY = center.getY();
		for ( Point2D point : elements) {
			point.setX(centerX-point.getX());
			point.setY(centerY-point.getY());
			int temp = point.getX();
			point.setX(-point.getY());
			point.setY(temp);
			point.setX(point.getX()+centerX);
			point.setY(point.getY()+centerY);
		}
	}
	public void movingLeft() {
		moveX(-1);
	}

	public void movingRight() {
		moveX(1);
	}

	public void falling() {
		moveY(1);
	}

	public boolean overRange() {
		for (Point2D point : elements) {
			if (point.getX() > Tetris.XSIZE - 1 || point.getX() < 0 || point.getY() > Tetris.YSIZE - 1) {
				return true;
			}
		}
		return false;

	}

	// getter and setter

	public Point2D getElements(int input) {
		return elements.get(input-1);
	}

	/*
	 * set element point
	 */
	public void setElements(Point2D element, int input) {
		elements.set(input, element);
	}

	/*
	 * set element
	 */
	public void setElements(List<Point2D> in) {
		for (int i = 0; i < in.size(); i++) {
			setElements(new Point2D(in.get(i).getX(), in.get(i).getY()), i);
		}
	}

	public List<Point2D> getElements() {
		return elements;
	}

	public int getWidth() {
		return width;
	}

	public void setWidth(int width) {
		this.width = width;
	}

	public int getKey() {
		return key;
	}

	public void setKey(int key) {
		this.key = key;
	}

	public Point2D getCenter() {
		return center;
	}

	public void setCenter(Point2D center) {
		this.center = center;
	}
}
